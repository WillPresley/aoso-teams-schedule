!function(e){"use strict";if("undefined"==typeof acf)return void console.warn("AOSO: acf not found; aborting seeder");console.log("AOSO: admin seeder loaded");const t=[{name:"Field 1",bg:"#f4cccc"},{name:"Field 2",bg:"#d9d2e9"},{name:"Field 3",bg:"#cfe1f3"}],n=["9:00","10:30"],o="field_aoso_matchdays",a="field_aoso_md_fields",d="field_aoso_md_field_name",i="field_aoso_md_field_bg",f="field_aoso_md_times",c="field_aoso_md_time_label";function l(e){let t=e.find("> .acf-input .acf-repeater > .acf-rows > .acf-row");return t.length?t:(t=e.find("> .acf-input .acf-repeater > .acf-table > tbody > tr.acf-row"),t.length?t:e.find(".acf-row"))}function r(e){try{const t=acf.getField(e);if(t&&"function"==typeof t.add){const e=t.add();if(e&&e.$el)return e.$el}}catch(e){}const t=e.find('> .acf-actions .acf-button[data-event="add-row"]').first();return t.length?(t.trigger("click"),l(e).last()):(console.warn("AOSO: unable to add repeater row (no API & no add button)"),null)}function s(e,t,n){const o=e.find(`[data-key="${t}"]`).first();if(o.length){const e=o.find("input, textarea, select").first();if(e.length)return e.val(n).trigger("input").trigger("change"),!0}const a=t.replace(/^field_/,""),d=e.find(`[data-name="${a}"]`).first();if(d.length){const e=d.find("input, textarea, select").first();if(e.length)return e.val(n).trigger("input").trigger("change"),!0}return!1}function u(e){console.log("AOSO: seedMatchdayRow starting for row",e);const o=e.find(`[data-key="${a}"], [data-name="fields"]`).first();if(!o.length)return void console.warn("AOSO: fields repeater not found inside matchday row");let u=0;for(;l(o).length<3&&u<6;)r(o),u++;let g=l(o);console.log("AOSO: field rows count after adding:",g.length);for(let e=0;e<3;e++){const o=g.eq(e);if(!o.length){console.warn("AOSO: expected field row",e,"not found");continue}const a=t[e]||{name:"Field "+(e+1),bg:""},u=s(o,d,a.name)||s(o,"field_name",a.name),m=s(o,i,a.bg)||s(o,"field_bg",a.bg);u||console.warn("AOSO: failed to set field_name for row",e),m||console.warn("AOSO: failed to set field_bg for row",e);const h=o.find(`[data-key="${f}"], [data-name="times"]`).first();if(!h.length){console.warn("AOSO: times repeater not found for field row",e);continue}let O=0;for(;l(h).length<2&&O<6;)r(h),O++;let _=l(h);console.log("AOSO: time rows count for field",e,_.length);for(let t=0;t<2;t++){const o=_.eq(t);if(!o.length){console.warn("AOSO: expected time row",t,"not found for field",e);continue}s(o,c,n[t])||s(o,"time_label",n[t])||console.warn("AOSO: failed to set time_label for time",t,"field",e)}}console.log("AOSO: seedMatchdayRow finished")}acf.addAction(`ready_field/key=${o}`,(function(e){console.log("AOSO: ready_field for matchdays");const t=e.$el;if(0===l(t).length){const e=r(t);e&&setTimeout((function(){u(e)}),40)}})),acf.addAction(`append_field/key=${o}`,(function(e){console.log("AOSO: append_field for matchdays"),setTimeout((function(){const t=l(e.$el).last();t.length&&u(t)}),60)})),acf.addAction("append",(function(e){const t=e.is(".acf-row")?e:e.find(".acf-row").first();t.length&&t.closest(`[data-key="${o}"], [data-name="aoso_matchdays"]`).length&&setTimeout((function(){u(t)}),60)})),e(document).on("click",`[data-key="${o}"] .acf-actions [data-event="add-row"], [data-name="aoso_matchdays"] .acf-actions [data-event="add-row"]`,(function(){const t=e(this).closest(`[data-key="${o}"], [data-name="aoso_matchdays"]`);setTimeout((function(){const e=l(t).last();e.length&&u(e)}),80)})),window.AOSO_seed_debug=function(){const t=function(t){let n=e(`[data-key="${t}"]`);return n.length||(n=e(`[data-name="${t.replace(/^field_/,"")}"]`)),n.first()}(o);if(!t.length)return console.warn("AOSO: matchdays repeater not found");const n=l(t).last();if(!n.length)return console.warn("AOSO: no matchday rows to seed");u(n)}}(jQuery);